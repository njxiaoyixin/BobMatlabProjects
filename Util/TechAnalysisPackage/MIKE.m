function [WR,MR,SR,WS,MS,SS]=MIKE(High,Low,Close,Length)
%--------------------此函数用来计算MIKE指数(麦克指标)---------------------
%----------------------------------编写者--------------------------------
%Lian Xiangbin(连长,785674410@qq.com),DUFE,2014
%----------------------------------参考----------------------------------
%[1]姜金胜.指标精萃：经典技术指标精解与妙用.东华大学出版社,2004年01月第1版
%[2]来自网络.24个基本指标精粹讲解
%[3]同花顺.MIKE指标算法
%----------------------------------简介----------------------------------
%MIKE指标又叫麦克指标，其英文全称是“MIKE Base”,是一种专门研究价格各种
%压力和支撑的中长期技术分析工具。与BOLL指标一样，MIKE指标是随价格波动幅
%度大小而变动的压力支撑指标，是一种路径型指标。它随着价格的变化而变化，能
%有效地预测价格未来可能上涨或下跌的空间。目前，大多数技术分析指标都是利
%用证券的价格、从各种角度来分析判断价格的走势，其中，最典型的是开盘价、收
%盘价、最高价和最低价。虽然这四种价格已经基本上能反映价格的走势，但在某种
%程度上，这四种价格又都不能完全准确地反映价格在某一时期的真正走势。比如，
%在日常走势中，我们经常能看见在靠近收市时的几分钟里，某一证券的尾市行情突
%然风云变化，在短短几分钟里，在大量买盘的推动下，本来下跌的行情却变成大幅
%上涨的行情，价格也拔地而起。很显然，这种价格尾市的突然飙升并不能代表价格
%一整天的下跌走势，因此，这天该证券的收盘价并不能真实地反映证券当天的大部
%分时间的走势，该天的收盘价也就失去了的真实性。同样，很多证券的某些交易日
%的开盘价、最高价和最低价也会在主力机构地刻意拉抬或打压下，会经常发生这样
%的情况。 为了在某种程度上去弥补那些由于利用证券的开盘价、收盘价等价格的
%技术指标在行情研判上的误差，MIKE指标设定了一个起始价格(即Typicalprice,
%简称TP)，以此作为计算基准，求得价格的初级、中级和强力等6种支撑或压力价位
%区，从而为投资者预测价格的短中长期的走势提供重要的参考。 
%----------------------------------基本用法------------------------------
%MIKE和著名的R-Break策略中的6条线非常非常像，详细用法，请查看参考
%----------------------------------调用函数------------------------------
%[WR,MR,SR,WS,MS,SS]=MIKE(High,Low,Close,Length)
%----------------------------------参数----------------------------------
%High-最高价序列
%Low-最低价序列
%Close-收盘价序列
%Length-计算时所考虑的周期，常用12个Bar
%----------------------------------输出----------------------------------
%WR-初级压力
%MR-中级压力
%SR-强力压力
%WS-初级支撑
%MS-中级支撑
%SS-强力支撑

TP=(High+Low+Close)/3;
WR=zeros(length(High),1);
MR=zeros(length(High),1);
SR=zeros(length(High),1);
WS=zeros(length(High),1);
MS=zeros(length(High),1);
SS=zeros(length(High),1);
WR(1:Length-1)=TP(1:Length-1);
MR(1:Length-1)=TP(1:Length-1);
SR(1:Length-1)=TP(1:Length-1);
WS(1:Length-1)=TP(1:Length-1);
MS(1:Length-1)=TP(1:Length-1);
SS(1:Length-1)=TP(1:Length-1);
for i=Length:length(High)
    Highest=max(High(i-Length+1:i));
    Lowest=min(Low(i-Length+1:i));
    WR(i)=TP(i)+(TP(i)-Lowest);
    MR(i)=TP(i)+(Highest-Lowest);
    SR(i)=2*Highest-Lowest;
    WS(i)=TP(i)-(Highest-TP(i));
    MS(i)=TP(i)-(Highest-Lowest);
    SS(i)=2*Lowest-Highest;
end
end

